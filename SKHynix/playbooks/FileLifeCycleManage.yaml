---
- name: Distributed xcp scan
  hosts: task_server_DLC
  gather_facts: no
  strategy: free
  collections:
  - netapp.ontap
  tasks:
    - name: Get rest data information
      na_ontap_rest_info:
        hostname: "{{ cluster.ip }}"
        username: "{{ cluster.ID }}"
        password: "{{ cluster.PW }}"
        https: true
        validate_certs: false
        gather_subset:
          - volume_info
        fields:
          - 'svm.name'
          - 'nas'
          - 'name'
      register: ontap_volumes
      loop: "{{ clusters }}"
      loop_control:
        loop_var: cluster

    - name: Write result data to a JSON file
      copy:
        dest: "/tmp/volume_path_info.json"
        content: "{{ ontap_volumes.results | to_nice_json }}"
      register: datafile

    - name: Write result data to a config file
      copy:
        dest: "/tmp/config.yaml"
        content: "{{ DLC | to_nice_yaml }}"
      register: config

    - name: Search for 'script' in all directories
      find:
        paths: "{{ scripts_dir }}"
        patterns: "DLC.py"
        recurse: yes
        file_type: file
      register: files_matched

    - name: Generate FLM list
      command: "python3 {{ files_matched.files[0].path }} -r get_scan_object --config {{ config.dest }} -f {{ datafile.dest }}"
      register: volume_list

    - name: Display volume_list
      debug:
        msg: "{{ volume_list.stdout }}"

    - name: xcp scan
      command: xcp scan -match "{{volume.xcp_option.match}}" -fmt "{{volume.xcp_option.fmt}}" {{ volume.mount_path }}
      async: 600
      poll: 2
      ignore_errors: true
      loop: "{{ volume_list.stdout }}"
      loop_control:
        loop_var: volume
      register: scan_list

    - name: Wait for all xcp scan tasks to complete
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 30
      delay: 10
      loop: "{{ scan_list.results }}"
      loop_control:
        loop_var: item

    - name: get auto path
      command: ssh chopin1 getauto auto.{{volume.autopath.automap}} | grep -w "{{volume.mount_path}}" | awk "'{print $1}'"
      async: 600
      poll: 0
      ignore_errors: true
      loop: "{{ volume_list.stdout }}"
      loop_control:
        loop_var: volume
      register: auto_path_list

    - name: Wait for all get auto path tasks to complete
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 30
      delay: 10
      loop: "{{ auto_path_list.results }}"
      loop_control:
        loop_var: item

    - name: Format scan results
      set_fact:
        formatted_results: "{{ formatted_results | default([]) + [item.stdout_lines[2:] | join('<br>')] }}"
        scan_list_file_results: "{{ formatted_results | default([]) + [item.stdout_lines[2:] | join('\n')] }}"
      loop: "{{ scan_list.results }}"
      loop_control:
        loop_var: item

    - name: Write result data to a scan_list file
      copy:
        dest: "/tmp/scan_list_file_results.list"
        content: "{{ scan_list_file_results | join('\n')}}"
      register: scan_list_file

    - name: Display auto_path_list
      debug:
        msg: "{{auto_path_list.results}}"

    - name: change file
      command: "cat {{scan_list_file.dest}} | awk -F'{{item.0.stdout_lines}}' '{print $1 \"/{{item.1.volume.autopath.automap}}/{{item.1.stdout_lines}}/\"$2}'"
      ignore_errors: true
      loop: "{{ scan_list.results | zip(auto_path_list.results)}}"
      loop_control:
        loop_var: item

    - name: Send storage scan report via email
      mail:
        host: "{{ smtp_server }}"
        port: "{{ smtp_port }}"
        username: "{{ smtp_username }}"
        password: "{{ smtp_password }}"
        to: "{{ email_to }}"
        subject: "FLM list {{ ansible_date_time.date }} "
        body: "{{ formatted_results | join('<br>') }}"
        from: "{{ email_from }}"
        secure: starttls
        subtype: html
        headers: 
          - Content-Type="text/html"
