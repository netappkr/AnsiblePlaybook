- name: Modify mount.path in file based on get.auto output
  hosts: task_server_1_DLC
  gather_facts: no
  tasks:
    - name: Read the scan_list_file_results.yaml
      ansible.builtin.slurp:
        src: /tmp/scan_list_file_results.yaml
      register: result
      
    - name: "Parse yaml into variable"
      set_fact:
        config_mapping: "{{ result.content | b64decode | from_yaml }}"

    - name: Display config
      debug:
        msg: "{{ config_mapping }}"

    - name: Extract automap values
      set_fact:
        automap_values: "{{ config_mapping.scan_info | map(attribute='automap') | list }}"

    - name: Remove duplicate automap values
      set_fact:
        unique_automap_values: "{{ automap_values | unique }}"

    - name: Display unique automap values
      debug:
        msg: "{{ unique_automap_values }}"

    - name: Run get.auto command
      shell: | 
        getauto auto.{{ item }}
      loop: "{{unique_automap_values}}"
      register: getauto_output

    - name: Write result data to a automap file
      copy:
        dest: "/tmp/auto.{{automap.1}}"
        content: "{{ automap.0.stdout }}"
      loop: "{{ getauto_output.results | zip(unique_automap_values) | list }}"
      loop_control:
        loop_var: automap
      
    - name: Search for 'script' in all directories
      find:
        paths: "{{ scripts_dir }}"
        patterns: "Autopath.py"
        recurse: yes
        file_type: file
      register: files_matched

    - name: Print the matched files
      debug:
        msg: "{{ files_matched.files[0].path }}"

    - name: Generate FLM list
      command: "python3 {{ files_matched.files[0].path }} -f {{ config.result }}" -a auto.{{config.automap}} --searchdir {{ config.searchdir }}
      loop: "{{ config_mapping.scan_info }}"
      loop_control:
        loop_var: config
      register: volume_list


